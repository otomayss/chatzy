{"version":3,"file":"js/779-legacy.0d927fa1.js","mappings":"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","sources":["webpack://lin-cms-vvlog/./node_modules/.pnpm/core-js@3.28.0/node_modules/core-js/internals/string-pad-webkit-bug.js","webpack://lin-cms-vvlog/./node_modules/.pnpm/core-js@3.28.0/node_modules/core-js/internals/string-pad.js","webpack://lin-cms-vvlog/./node_modules/.pnpm/core-js@3.28.0/node_modules/core-js/internals/string-repeat.js","webpack://lin-cms-vvlog/./node_modules/.pnpm/core-js@3.28.0/node_modules/core-js/internals/string-trim-forced.js","webpack://lin-cms-vvlog/./node_modules/.pnpm/core-js@3.28.0/node_modules/core-js/modules/es.string.pad-start.js","webpack://lin-cms-vvlog/./node_modules/.pnpm/core-js@3.28.0/node_modules/core-js/modules/es.string.trim.js","webpack://lin-cms-vvlog/./src/view/aichat/aichat-dialog.vue?de68","webpack://lin-cms-vvlog/./node_modules/.pnpm/marked@15.0.4/node_modules/marked/lib/marked.esm.js","webpack://lin-cms-vvlog/./src/view/aichat/aichat-dialog.vue","webpack://lin-cms-vvlog/./src/view/aichat/aichat-dialog.vue?e81c","webpack://lin-cms-vvlog/./src/view/order/order-pay-dialog.vue?e361","webpack://lin-cms-vvlog/./src/view/order/order-pay-dialog.vue","webpack://lin-cms-vvlog/./src/view/order/order-pay-dialog.vue?7919","webpack://lin-cms-vvlog/./node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["// https://github.com/zloirock/core-js/issues/280\nvar userAgent = require('../internals/engine-user-agent');\n\nmodule.exports = /Version\\/10(?:\\.\\d+){1,2}(?: [\\w./]+)?(?: Mobile\\/\\w+)? Safari\\//.test(userAgent);\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar $repeat = require('../internals/string-repeat');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar repeat = uncurryThis($repeat);\nvar stringSlice = uncurryThis(''.slice);\nvar ceil = Math.ceil;\n\n// `String.prototype.{ padStart, padEnd }` methods implementation\nvar createMethod = function (IS_END) {\n  return function ($this, maxLength, fillString) {\n    var S = toString(requireObjectCoercible($this));\n    var intMaxLength = toLength(maxLength);\n    var stringLength = S.length;\n    var fillStr = fillString === undefined ? ' ' : toString(fillString);\n    var fillLen, stringFiller;\n    if (intMaxLength <= stringLength || fillStr == '') return S;\n    fillLen = intMaxLength - stringLength;\n    stringFiller = repeat(fillStr, ceil(fillLen / fillStr.length));\n    if (stringFiller.length > fillLen) stringFiller = stringSlice(stringFiller, 0, fillLen);\n    return IS_END ? S + stringFiller : stringFiller + S;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.padStart` method\n  // https://tc39.es/ecma262/#sec-string.prototype.padstart\n  start: createMethod(false),\n  // `String.prototype.padEnd` method\n  // https://tc39.es/ecma262/#sec-string.prototype.padend\n  end: createMethod(true)\n};\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $RangeError = RangeError;\n\n// `String.prototype.repeat` method implementation\n// https://tc39.es/ecma262/#sec-string.prototype.repeat\nmodule.exports = function repeat(count) {\n  var str = toString(requireObjectCoercible(this));\n  var result = '';\n  var n = toIntegerOrInfinity(count);\n  if (n < 0 || n == Infinity) throw $RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","var PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]()\n      || non[METHOD_NAME]() !== non\n      || (PROPER_FUNCTION_NAME && whitespaces[METHOD_NAME].name !== METHOD_NAME);\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $padStart = require('../internals/string-pad').start;\nvar WEBKIT_BUG = require('../internals/string-pad-webkit-bug');\n\n// `String.prototype.padStart` method\n// https://tc39.es/ecma262/#sec-string.prototype.padstart\n$({ target: 'String', proto: true, forced: WEBKIT_BUG }, {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $padStart(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","import \"core-js/modules/es.string.trim.js\";\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-57897a00\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  class: \"chat-dialog\"\n};\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"chat-header\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"header-title\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"el-icon-chat-dot-round\"\n  }), /*#__PURE__*/_createElementVNode(\"span\", null, \"遥遥领先的测算大模型！\")])], -1);\n});\nvar _hoisted_3 = {\n  class: \"chat-body\",\n  ref: \"chatBody\"\n};\nvar _hoisted_4 = {\n  class: \"message-list\"\n};\nvar _hoisted_5 = {\n  class: \"message-avatar\"\n};\nvar _hoisted_6 = {\n  class: \"message-wrapper\"\n};\nvar _hoisted_7 = [\"innerHTML\"];\nvar _hoisted_8 = {\n  key: 0,\n  class: \"loading-indicator\"\n};\nvar _hoisted_9 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"el-icon-loading\"\n  }, null, -1);\n});\nvar _hoisted_10 = {\n  class: \"chat-footer\"\n};\nvar _hoisted_11 = {\n  class: \"input-wrapper\"\n};\nvar _hoisted_12 = [\"disabled\"];\nvar _hoisted_13 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"el-icon-s-promotion\"\n  }, null, -1);\n});\nvar _hoisted_14 = [_hoisted_13];\nvar _hoisted_15 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"el-icon-document\"\n  }, null, -1);\n});\nvar _hoisted_16 = [_hoisted_15];\nvar _hoisted_17 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, function (message, index) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: _normalizeClass(['message-item', message.role === 'user' ? 'user-message' : 'system-message'])\n    }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"i\", {\n      class: _normalizeClass(message.role === 'user' ? 'el-icon-user' : 'el-icon-chat-dot-round')\n    }, null, 2)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", {\n      class: \"message-content\",\n      innerHTML: $options.parseMarkdown(message.content)\n    }, null, 8, _hoisted_7)])], 2);\n  }), 128))]), $data.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createTextVNode(\" 邻诗正在深度思考中....\"), _hoisted_9])) : _createCommentVNode(\"\", true)], 512), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.inputMessage = $event;\n    }),\n    placeholder: \"输入您的问题...\",\n    onKeyup: _cache[1] || (_cache[1] = _withKeys(function () {\n      return $options.sendMessage && $options.sendMessage.apply($options, arguments);\n    }, [\"enter\"])),\n    ref: \"inputField\"\n  }, null, 544), [[_vModelText, $data.inputMessage]]), _createElementVNode(\"button\", {\n    class: \"send-button\",\n    onClick: _cache[2] || (_cache[2] = function () {\n      return $options.sendMessage && $options.sendMessage.apply($options, arguments);\n    }),\n    disabled: !$data.inputMessage.trim()\n  }, _hoisted_14, 8, _hoisted_12), $options.loggedIn && $data.ai_chat_count === -1 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"publish-button\",\n    onClick: _cache[3] || (_cache[3] = function () {\n      return $options.showPublishDialog && $options.showPublishDialog.apply($options, arguments);\n    })\n  }, _hoisted_16)) : _createCommentVNode(\"\", true)])]), _createVNode(_component_el_dialog, {\n    title: \"发布对话\",\n    modelValue: $data.publishDialogVisible,\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = function ($event) {\n      return $data.publishDialogVisible = $event;\n    }),\n    width: \"30%\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_17, [_createVNode(_component_el_button, {\n        onClick: _cache[5] || (_cache[5] = function ($event) {\n          return $data.publishDialogVisible = false;\n        })\n      }, {\n        default: _withCtx(function () {\n          return [_createTextVNode(\"取消\")];\n        }),\n        _: 1\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.publishChat\n      }, {\n        default: _withCtx(function () {\n          return [_createTextVNode(\"确认\")];\n        }),\n        _: 1\n      }, 8, [\"onClick\"])])];\n    }),\n    default: _withCtx(function () {\n      return [_createVNode(_component_el_input, {\n        modelValue: $data.dialogTitle,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n          return $data.dialogTitle = $event;\n        }),\n        placeholder: \"请输入标题\"\n      }, null, 8, [\"modelValue\"])];\n    }),\n    _: 1\n  }, 8, [\"modelValue\"])]);\n}","/**\n * marked v15.0.4 - a markdown parser\n * Copyright (c) 2011-2024, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null,\n    };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n\nconst noopTest = { exec: () => null };\nfunction edit(regex, opt = '') {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(other.caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        },\n    };\n    return obj;\n}\nconst other = {\n    codeRemoveIndent: /^(?: {1,4}| {0,3}\\t)/gm,\n    outputLinkReplace: /\\\\([\\[\\]])/g,\n    indentCodeCompensation: /^(\\s+)(?:```)/,\n    beginningSpace: /^\\s+/,\n    endingHash: /#$/,\n    startingSpaceChar: /^ /,\n    endingSpaceChar: / $/,\n    nonSpaceChar: /[^ ]/,\n    newLineCharGlobal: /\\n/g,\n    tabCharGlobal: /\\t/g,\n    multipleSpaceGlobal: /\\s+/g,\n    blankLine: /^[ \\t]*$/,\n    doubleBlankLine: /\\n[ \\t]*\\n[ \\t]*$/,\n    blockquoteStart: /^ {0,3}>/,\n    blockquoteSetextReplace: /\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g,\n    blockquoteSetextReplace2: /^ {0,3}>[ \\t]?/gm,\n    listReplaceTabs: /^\\t+/,\n    listReplaceNesting: /^ {1,4}(?=( {4})*[^ ])/g,\n    listIsTask: /^\\[[ xX]\\] /,\n    listReplaceTask: /^\\[[ xX]\\] +/,\n    anyLine: /\\n.*\\n/,\n    hrefBrackets: /^<(.*)>$/,\n    tableDelimiter: /[:|]/,\n    tableAlignChars: /^\\||\\| *$/g,\n    tableRowBlankLine: /\\n[ \\t]*$/,\n    tableAlignRight: /^ *-+: *$/,\n    tableAlignCenter: /^ *:-+: *$/,\n    tableAlignLeft: /^ *:-+ *$/,\n    startATag: /^<a /i,\n    endATag: /^<\\/a>/i,\n    startPreScriptTag: /^<(pre|code|kbd|script)(\\s|>)/i,\n    endPreScriptTag: /^<\\/(pre|code|kbd|script)(\\s|>)/i,\n    startAngleBracket: /^</,\n    endAngleBracket: />$/,\n    pedanticHrefTitle: /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/,\n    unicodeAlphaNumeric: /[\\p{L}\\p{N}]/u,\n    escapeTest: /[&<>\"']/,\n    escapeReplace: /[&<>\"']/g,\n    escapeTestNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/,\n    escapeReplaceNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/g,\n    unescapeTest: /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig,\n    caret: /(^|[^\\[])\\^/g,\n    percentDecode: /%25/g,\n    findPipe: /\\|/g,\n    splitPipe: / \\|/,\n    slashPipe: /\\\\\\|/g,\n    carriageReturn: /\\r\\n|\\r/g,\n    spaceLine: /^ +$/gm,\n    notSpaceStart: /^\\S*/,\n    endingNewline: /\\n$/,\n    listItemRegex: (bull) => new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`),\n    nextBulletRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`),\n    hrRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`),\n    fencesBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`),\n    headingBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`),\n    htmlBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}<(?:[a-z].*>|!--)`, 'i'),\n};\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?:[ \\t]*(?:\\n|$))+/;\nconst blockCode = /^((?: {4}| {0,3}\\t)[^\\n]+(?:\\n(?:[ \\t]*(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheading = edit(/^(?!bull |blockCode|fences|blockquote|heading|html)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n[ \\t]*)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n[ \\t]*)?| *\\n[ \\t]*)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'\n    + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText,\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', '(?: {4}| {0,3}\\t)[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex(),\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex(),\n};\n/**\n * Inline-Level Grammar\n */\nconst escape$1 = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = /[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpace = /[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpace = /[^\\s\\p{P}\\p{S}]/u;\nconst punctuation = edit(/^((?![*_])punctSpace)/, 'u')\n    .replace(/punctSpace/g, _punctuationOrSpace).getRegex();\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\((?:\\\\.|[^\\\\\\(\\)]|\\((?:\\\\.|[^\\\\\\(\\)])*\\))*\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelim = edit(/^(?:\\*+(?:((?!\\*)punct)|[^\\s*]))|^_+(?:((?!_)punct)|([^\\s_]))/, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAst = edit('^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)punct(\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|notPunctSpace(\\\\*+)(?!\\\\*)(?=punctSpace|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)punctSpace(\\\\*+)(?=notPunctSpace)' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=punct)' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)punct(\\\\*+)(?!\\\\*)(?=punct)' // (5) #***# can be either Left or Right Delimiter\n    + '|notPunctSpace(\\\\*+)(?=notPunctSpace)', 'gu') // (6) a***a can be either Left or Right Delimiter\n    .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n    .replace(/punctSpace/g, _punctuationOrSpace)\n    .replace(/punct/g, _punctuation)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)punct(_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|notPunctSpace(_+)(?!_)(?=punctSpace|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)punctSpace(_+)(?=notPunctSpace)' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=punct)' // (4) ___# can only be Left Delimiter\n    + '|(?!_)punct(_+)(?!_)(?=punct)', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n    .replace(/punctSpace/g, _punctuationOrSpace)\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\(punct)/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape: escape$1,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest,\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    escape: edit(escape$1).replace('])', '~|])').getRegex(),\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])((?:\\\\.|[^\\\\])*?(?:\\\\.|[^\\s~\\\\]))\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/,\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex(),\n};\n/**\n * exports\n */\nconst block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic,\n};\nconst inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic,\n};\n\n/**\n * Helpers\n */\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n    if (encode) {\n        if (other.escapeTest.test(html)) {\n            return html.replace(other.escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (other.escapeTestNoEncode.test(html)) {\n            return html.replace(other.escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nfunction cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(other.percentDecode, '%');\n    }\n    catch {\n        return null;\n    }\n    return href;\n}\nfunction splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(other.findPipe, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(other.splitPipe);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells.at(-1)?.trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(other.slashPipe, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n            suffLen++;\n        }\n        else if (currChar !== c && invert) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n\nfunction outputLink(cap, link, raw, lexer, rules) {\n    const href = link.href;\n    const title = link.title || null;\n    const text = cap[1].replace(rules.other.outputLinkReplace, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text),\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text,\n    };\n}\nfunction indentCodeCompensation(raw, text, rules) {\n    const matchIndentToCode = raw.match(rules.other.indentCodeCompensation);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(rules.other.beginningSpace);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0],\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(this.rules.other.codeRemoveIndent, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text,\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '', this.rules);\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text,\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (this.rules.other.endingHash.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || this.rules.other.endingSpaceChar.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: rtrim(cap[0], '\\n'),\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            let lines = rtrim(cap[0], '\\n').split('\\n');\n            let raw = '';\n            let text = '';\n            const tokens = [];\n            while (lines.length > 0) {\n                let inBlockquote = false;\n                const currentLines = [];\n                let i;\n                for (i = 0; i < lines.length; i++) {\n                    // get lines up to a continuation\n                    if (this.rules.other.blockquoteStart.test(lines[i])) {\n                        currentLines.push(lines[i]);\n                        inBlockquote = true;\n                    }\n                    else if (!inBlockquote) {\n                        currentLines.push(lines[i]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                lines = lines.slice(i);\n                const currentRaw = currentLines.join('\\n');\n                const currentText = currentRaw\n                    // precede setext continuation with 4 spaces so it isn't a setext\n                    .replace(this.rules.other.blockquoteSetextReplace, '\\n    $1')\n                    .replace(this.rules.other.blockquoteSetextReplace2, '');\n                raw = raw ? `${raw}\\n${currentRaw}` : currentRaw;\n                text = text ? `${text}\\n${currentText}` : currentText;\n                // parse blockquote lines as top level tokens\n                // merge paragraphs if this is a continuation\n                const top = this.lexer.state.top;\n                this.lexer.state.top = true;\n                this.lexer.blockTokens(currentText, tokens, true);\n                this.lexer.state.top = top;\n                // if there is no continuation then we are done\n                if (lines.length === 0) {\n                    break;\n                }\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'code') {\n                    // blockquote continuation cannot be preceded by a code block\n                    break;\n                }\n                else if (lastToken?.type === 'blockquote') {\n                    // include continuation in nested blockquote\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.blockquote(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - oldToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.text.length) + newToken.text;\n                    break;\n                }\n                else if (lastToken?.type === 'list') {\n                    // include continuation in nested list\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.list(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - lastToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.raw.length) + newToken.raw;\n                    lines = newText.substring(tokens.at(-1).raw.length).split('\\n');\n                    continue;\n                }\n            }\n            return {\n                type: 'blockquote',\n                raw,\n                tokens,\n                text,\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: [],\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = this.rules.other.listItemRegex(bull);\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                let raw = '';\n                let itemContents = '';\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(this.rules.other.listReplaceTabs, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let blankLine = !line.trim();\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else if (blankLine) {\n                    indent = cap[1].length + 1;\n                }\n                else {\n                    indent = cap[2].search(this.rules.other.nonSpaceChar); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                if (blankLine && this.rules.other.blankLine.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = this.rules.other.nextBulletRegex(indent);\n                    const hrRegex = this.rules.other.hrRegex(indent);\n                    const fencesBeginRegex = this.rules.other.fencesBeginRegex(indent);\n                    const headingBeginRegex = this.rules.other.headingBeginRegex(indent);\n                    const htmlBeginRegex = this.rules.other.htmlBeginRegex(indent);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        let nextLineWithoutTabs;\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(this.rules.other.listReplaceNesting, '  ');\n                            nextLineWithoutTabs = nextLine;\n                        }\n                        else {\n                            nextLineWithoutTabs = nextLine.replace(this.rules.other.tabCharGlobal, '    ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of html block\n                        if (htmlBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(nextLine)) {\n                            break;\n                        }\n                        if (nextLineWithoutTabs.search(this.rules.other.nonSpaceChar) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLineWithoutTabs.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.replace(this.rules.other.tabCharGlobal, '    ').search(this.rules.other.nonSpaceChar) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLineWithoutTabs.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (this.rules.other.doubleBlankLine.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = this.rules.other.listIsTask.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(this.rules.other.listReplaceTask, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: [],\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            const lastItem = list.items.at(-1);\n            if (lastItem) {\n                lastItem.raw = lastItem.raw.trimEnd();\n                lastItem.text = lastItem.text.trimEnd();\n            }\n            else {\n                // not a list since there were no items\n                return;\n            }\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => this.rules.other.anyLine.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0],\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal, ' ');\n            const href = cap[2] ? cap[2].replace(this.rules.other.hrefBrackets, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title,\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!this.rules.other.tableDelimiter.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(this.rules.other.tableAlignChars, '').split('|');\n        const rows = cap[3]?.trim() ? cap[3].replace(this.rules.other.tableRowBlankLine, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: [],\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (this.rules.other.tableAlignRight.test(align)) {\n                item.align.push('right');\n            }\n            else if (this.rules.other.tableAlignCenter.test(align)) {\n                item.align.push('center');\n            }\n            else if (this.rules.other.tableAlignLeft.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (let i = 0; i < headers.length; i++) {\n            item.header.push({\n                text: headers[i],\n                tokens: this.lexer.inline(headers[i]),\n                header: true,\n                align: item.align[i],\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map((cell, i) => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell),\n                    header: false,\n                    align: item.align[i],\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1]),\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0]),\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: cap[1],\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && this.rules.other.startATag.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && this.rules.other.endATag.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && this.rules.other.startPreScriptTag.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && this.rules.other.endPreScriptTag.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0],\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && this.rules.other.startAngleBracket.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = this.rules.other.pedanticHrefTitle.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (this.rules.other.startAngleBracket.test(href)) {\n                if (this.options.pedantic && !(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title,\n            }, cap[0], this.lexer, this.rules);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(this.rules.other.multipleSpaceGlobal, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text,\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer, this.rules);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(this.rules.other.unicodeAlphaNumeric))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text),\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text),\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(this.rules.other.newLineCharGlobal, ' ');\n            const hasNonSpaceChars = this.rules.other.nonSpaceChar.test(text);\n            const hasSpaceCharsOnBothEnds = this.rules.other.startingSpaceChar.test(text) && this.rules.other.endingSpaceChar.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text,\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0],\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2]),\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = cap[1];\n                href = 'mailto:' + text;\n            }\n            else {\n                text = cap[1];\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = cap[0];\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = cap[0];\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            const escaped = this.lexer.state.inRawBlock;\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                escaped,\n            };\n        }\n    }\n}\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true,\n        };\n        const rules = {\n            other,\n            block: block.normal,\n            inline: inline.normal,\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline,\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src.replace(other.carriageReturn, '\\n');\n        this.blockTokens(src, this.tokens);\n        for (let i = 0; i < this.inlineQueue.length; i++) {\n            const next = this.inlineQueue[i];\n            this.inlineTokens(next.src, next.tokens);\n        }\n        this.inlineQueue = [];\n        return this.tokens;\n    }\n    blockTokens(src, tokens = [], lastParagraphClipped = false) {\n        if (this.options.pedantic) {\n            src = src.replace(other.tabCharGlobal, '    ').replace(other.spaceLine, '');\n        }\n        while (src) {\n            let token;\n            if (this.options.extensions?.block?.some((extTokenizer) => {\n                if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return true;\n                }\n                return false;\n            })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (token.raw.length === 1 && lastToken !== undefined) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    lastToken.raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title,\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            let cutSrc = src;\n            if (this.options.extensions?.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                const lastToken = tokens.at(-1);\n                if (lastParagraphClipped && lastToken?.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = cutSrc.length !== src.length;\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match = null;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index)\n                            + '[' + 'a'.repeat(match[0].length - 2) + ']'\n                            + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        let keepPrevChar = false;\n        let prevChar = '';\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            let token;\n            // extensions\n            if (this.options.extensions?.inline?.some((extTokenizer) => {\n                if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return true;\n                }\n                return false;\n            })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (token.type === 'text' && lastToken?.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            let cutSrc = src;\n            if (this.options.extensions?.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n    options;\n    parser; // set by the parser\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(token) {\n        return '';\n    }\n    code({ text, lang, escaped }) {\n        const langString = (lang || '').match(other.notSpaceStart)?.[0];\n        const code = text.replace(other.endingNewline, '') + '\\n';\n        if (!langString) {\n            return '<pre><code>'\n                + (escaped ? code : escape(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape(langString)\n            + '\">'\n            + (escaped ? code : escape(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote({ tokens }) {\n        const body = this.parser.parse(tokens);\n        return `<blockquote>\\n${body}</blockquote>\\n`;\n    }\n    html({ text }) {\n        return text;\n    }\n    heading({ tokens, depth }) {\n        return `<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\\n`;\n    }\n    hr(token) {\n        return '<hr>\\n';\n    }\n    list(token) {\n        const ordered = token.ordered;\n        const start = token.start;\n        let body = '';\n        for (let j = 0; j < token.items.length; j++) {\n            const item = token.items[j];\n            body += this.listitem(item);\n        }\n        const type = ordered ? 'ol' : 'ul';\n        const startAttr = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startAttr + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(item) {\n        let itemBody = '';\n        if (item.task) {\n            const checkbox = this.checkbox({ checked: !!item.checked });\n            if (item.loose) {\n                if (item.tokens[0]?.type === 'paragraph') {\n                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + escape(item.tokens[0].tokens[0].text);\n                        item.tokens[0].tokens[0].escaped = true;\n                    }\n                }\n                else {\n                    item.tokens.unshift({\n                        type: 'text',\n                        raw: checkbox + ' ',\n                        text: checkbox + ' ',\n                        escaped: true,\n                    });\n                }\n            }\n            else {\n                itemBody += checkbox + ' ';\n            }\n        }\n        itemBody += this.parser.parse(item.tokens, !!item.loose);\n        return `<li>${itemBody}</li>\\n`;\n    }\n    checkbox({ checked }) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph({ tokens }) {\n        return `<p>${this.parser.parseInline(tokens)}</p>\\n`;\n    }\n    table(token) {\n        let header = '';\n        // header\n        let cell = '';\n        for (let j = 0; j < token.header.length; j++) {\n            cell += this.tablecell(token.header[j]);\n        }\n        header += this.tablerow({ text: cell });\n        let body = '';\n        for (let j = 0; j < token.rows.length; j++) {\n            const row = token.rows[j];\n            cell = '';\n            for (let k = 0; k < row.length; k++) {\n                cell += this.tablecell(row[k]);\n            }\n            body += this.tablerow({ text: cell });\n        }\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow({ text }) {\n        return `<tr>\\n${text}</tr>\\n`;\n    }\n    tablecell(token) {\n        const content = this.parser.parseInline(token.tokens);\n        const type = token.header ? 'th' : 'td';\n        const tag = token.align\n            ? `<${type} align=\"${token.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong({ tokens }) {\n        return `<strong>${this.parser.parseInline(tokens)}</strong>`;\n    }\n    em({ tokens }) {\n        return `<em>${this.parser.parseInline(tokens)}</em>`;\n    }\n    codespan({ text }) {\n        return `<code>${escape(text, true)}</code>`;\n    }\n    br(token) {\n        return '<br>';\n    }\n    del({ tokens }) {\n        return `<del>${this.parser.parseInline(tokens)}</del>`;\n    }\n    link({ href, title, tokens }) {\n        const text = this.parser.parseInline(tokens);\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + (escape(title)) + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image({ href, title, text }) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return escape(text);\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${escape(title)}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(token) {\n        return 'tokens' in token && token.tokens\n            ? this.parser.parseInline(token.tokens)\n            : ('escaped' in token && token.escaped ? token.text : escape(token.text));\n    }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n    // no need for block level renderers\n    strong({ text }) {\n        return text;\n    }\n    em({ text }) {\n        return text;\n    }\n    codespan({ text }) {\n        return text;\n    }\n    del({ text }) {\n        return text;\n    }\n    html({ text }) {\n        return text;\n    }\n    text({ text }) {\n        return text;\n    }\n    link({ text }) {\n        return '' + text;\n    }\n    image({ text }) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.renderer.parser = this;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions?.renderers?.[anyToken.type]) {\n                const genericToken = anyToken;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'space': {\n                    out += this.renderer.space(token);\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr(token);\n                    continue;\n                }\n                case 'heading': {\n                    out += this.renderer.heading(token);\n                    continue;\n                }\n                case 'code': {\n                    out += this.renderer.code(token);\n                    continue;\n                }\n                case 'table': {\n                    out += this.renderer.table(token);\n                    continue;\n                }\n                case 'blockquote': {\n                    out += this.renderer.blockquote(token);\n                    continue;\n                }\n                case 'list': {\n                    out += this.renderer.list(token);\n                    continue;\n                }\n                case 'html': {\n                    out += this.renderer.html(token);\n                    continue;\n                }\n                case 'paragraph': {\n                    out += this.renderer.paragraph(token);\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = this.renderer.text(textToken);\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + this.renderer.text(textToken);\n                    }\n                    if (top) {\n                        out += this.renderer.paragraph({\n                            type: 'paragraph',\n                            raw: body,\n                            text: body,\n                            tokens: [{ type: 'text', raw: body, text: body, escaped: true }],\n                        });\n                    }\n                    else {\n                        out += body;\n                    }\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer = this.renderer) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions?.renderers?.[anyToken.type]) {\n                const ret = this.options.extensions.renderers[anyToken.type].call({ parser: this }, anyToken);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(anyToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'escape': {\n                    out += renderer.text(token);\n                    break;\n                }\n                case 'html': {\n                    out += renderer.html(token);\n                    break;\n                }\n                case 'link': {\n                    out += renderer.link(token);\n                    break;\n                }\n                case 'image': {\n                    out += renderer.image(token);\n                    break;\n                }\n                case 'strong': {\n                    out += renderer.strong(token);\n                    break;\n                }\n                case 'em': {\n                    out += renderer.em(token);\n                    break;\n                }\n                case 'codespan': {\n                    out += renderer.codespan(token);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br(token);\n                    break;\n                }\n                case 'del': {\n                    out += renderer.del(token);\n                    break;\n                }\n                case 'text': {\n                    out += renderer.text(token);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n\nclass _Hooks {\n    options;\n    block;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess',\n        'processAllTokens',\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n    /**\n     * Process all tokens before walk tokens\n     */\n    processAllTokens(tokens) {\n        return tokens;\n    }\n    /**\n     * Provide function to tokenize markdown\n     */\n    provideLexer() {\n        return this.block ? _Lexer.lex : _Lexer.lexInline;\n    }\n    /**\n     * Provide function to parse tokens\n     */\n    provideParser() {\n        return this.block ? _Parser.parse : _Parser.parseInline;\n    }\n}\n\nclass Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.parseMarkdown(true);\n    parseInline = this.parseMarkdown(false);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            const tokens = genericToken[childTokens].flat(Infinity);\n                            values = values.concat(this.walkTokens(tokens, callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer)) {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    if (['options', 'parser'].includes(prop)) {\n                        // ignore options property\n                        continue;\n                    }\n                    const rendererProp = prop;\n                    const rendererFunc = pack.renderer[rendererProp];\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    if (['options', 'rules', 'lexer'].includes(prop)) {\n                        // ignore options, rules, and lexer properties\n                        continue;\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks)) {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    if (['options', 'block'].includes(prop)) {\n                        // ignore options and block properties\n                        continue;\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    parseMarkdown(blockType) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const parse = (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            const throwError = this.onError(!!opt.silent, !!opt.async);\n            // throw error if an extension set async to true but parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                return throwError(new Error('marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise.'));\n            }\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n                opt.hooks.block = blockType;\n            }\n            const lexer = opt.hooks ? opt.hooks.provideLexer() : (blockType ? _Lexer.lex : _Lexer.lexInline);\n            const parser = opt.hooks ? opt.hooks.provideParser() : (blockType ? _Parser.parse : _Parser.parseInline);\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                let tokens = lexer(src, opt);\n                if (opt.hooks) {\n                    tokens = opt.hooks.processAllTokens(tokens);\n                }\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n        return parse;\n    }\n    onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\n\nexport { _Hooks as Hooks, _Lexer as Lexer, Marked, _Parser as Parser, _Renderer as Renderer, _TextRenderer as TextRenderer, _Tokenizer as Tokenizer, _defaults as defaults, _getDefaults as getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n//# sourceMappingURL=marked.esm.js.map\n","import _createForOfIteratorHelper from \"C:/projects/lincms/lin-cms-vvlog/node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"C:/projects/lincms/lin-cms-vvlog/node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/projects/lincms/lin-cms-vvlog/node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport Config from '@/config';\nimport { getToken } from '@/lin/util/token';\nimport axios from 'axios';\nimport { marked } from 'marked';\nimport OrderPayDialog from '@/view/order/order-pay-dialog';\nimport { ElMessage } from 'element-plus';\nexport default {\n  components: {\n    OrderPayDialog: OrderPayDialog\n  },\n  data: function data() {\n    return {\n      messages: [{\n        role: 'system',\n        content: '你好，我是邻智AI测算助手，提供八字合婚,流年运势,宝宝/公司起名,姓名配对,八字精批,塔罗牌占卜等在线测算，我会根据您提供的信息进行详细的计算和分析，有什么需要我的帮助吗？'\n      }],\n      inputMessage: '',\n      wdMessages: {},\n      isLoading: false,\n      // 添加一个标志变量\n      typeWriterTimer: null,\n      publishDialogVisible: false,\n      dialogTitle: '',\n      ai_chat_count: this.$store.state.user.ai_chat_count ? this.$store.state.user.ai_chat_count : null\n    };\n  },\n  methods: {\n    sendMessage: function sendMessage() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var str;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.inputMessage.trim() === '')) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              str = _this.inputMessage;\n              _this.inputMessage = '';\n              _this.messages.push({\n                role: 'user',\n                content: str\n              });\n              _this.scrollToBottom();\n\n              // 设置加载状态\n              _this.isLoading = true;\n              _context.next = 9;\n              return _this.getAiResponse();\n            case 9:\n              // 取消加载状态\n              _this.isLoading = false;\n              _this.scrollToBottom();\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    showPay: function showPay() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this2.$router.push('/server');\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    getAiResponse: function getAiResponse() {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var accessToken, lastSystemMessage, response, reader, buffer, _yield$reader$read, done, value, chunk, lines, _iterator, _step, line, trimmedLine, data, newContent;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              accessToken = getToken('access_token'); // 添加一个新的系统消息，用于显示流式响应\n              _this3.messages.push({\n                role: 'system',\n                content: ''\n              });\n\n              // 找到最后一个 role 为 'system' 的消息\n              lastSystemMessage = _this3.messages.slice().reverse().find(function (message) {\n                return message.role === 'system';\n              }); // 使用fetch API进行流式请求\n              _context3.next = 6;\n              return fetch(Config.baseURL + \"api/blog/articles/chatstream2\", {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json; charset=utf-8',\n                  'Authorization': accessToken\n                },\n                body: JSON.stringify(_this3.messages)\n              });\n            case 6:\n              response = _context3.sent;\n              // 获取响应的可读流\n              reader = response.body.getReader(); // 处理流式数据\n              buffer = '';\n            case 9:\n              if (!true) {\n                _context3.next = 42;\n                break;\n              }\n              _context3.next = 12;\n              return reader.read();\n            case 12:\n              _yield$reader$read = _context3.sent;\n              done = _yield$reader$read.done;\n              value = _yield$reader$read.value;\n              if (!done) {\n                _context3.next = 17;\n                break;\n              }\n              return _context3.abrupt(\"break\", 42);\n            case 17:\n              // 将Uint8Array转换为字符串\n              chunk = new TextDecoder().decode(value);\n              buffer += chunk;\n\n              // 处理可能包含多行的数据\n              lines = buffer.split('\\n'); // 保留最后一行（可能不完整）\n              buffer = lines.pop() || '';\n              _iterator = _createForOfIteratorHelper(lines);\n              _context3.prev = 22;\n              _iterator.s();\n            case 24:\n              if ((_step = _iterator.n()).done) {\n                _context3.next = 32;\n                break;\n              }\n              line = _step.value;\n              if (!(line.trim() === '' || line === 'data: [DONE]')) {\n                _context3.next = 28;\n                break;\n              }\n              return _context3.abrupt(\"continue\", 30);\n            case 28:\n              trimmedLine = line.startsWith('data: ') ? line.substring(6) : line;\n              try {\n                data = JSON.parse(trimmedLine);\n                if (data.choices && data.choices[0] && data.choices[0].delta && data.choices[0].delta.content) {\n                  newContent = data.choices[0].delta.content;\n                  lastSystemMessage.content += newContent;\n                  _this3.scrollToBottom();\n                }\n              } catch (error) {\n                console.error('Error parsing line:', line, error);\n              }\n            case 30:\n              _context3.next = 24;\n              break;\n            case 32:\n              _context3.next = 37;\n              break;\n            case 34:\n              _context3.prev = 34;\n              _context3.t0 = _context3[\"catch\"](22);\n              _iterator.e(_context3.t0);\n            case 37:\n              _context3.prev = 37;\n              _iterator.f();\n              return _context3.finish(37);\n            case 40:\n              _context3.next = 9;\n              break;\n            case 42:\n              _context3.next = 48;\n              break;\n            case 44:\n              _context3.prev = 44;\n              _context3.t1 = _context3[\"catch\"](0);\n              _this3.messages.push({\n                role: 'system',\n                content: '系统繁忙，请输入继续！'\n              });\n              _this3.inputMessage = '继续';\n            case 48:\n              _context3.prev = 48;\n              // 确保在请求完成或失败后取消加载状态\n              _this3.isLoading = false;\n              return _context3.finish(48);\n            case 51:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 44, 48, 51], [22, 34, 37, 40]]);\n      }))();\n    },\n    SendwdMessages: function SendwdMessages() {\n      var _this4 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var accessToken, response, msg;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _this4.wdMessages.title = _this4.dialogTitle;\n              _this4.wdMessages.messages = _this4.messages;\n              accessToken = getToken('access_token');\n              _context4.next = 6;\n              return axios.post(Config.baseURL + \"api/blog/articles/wdarticle\", _this4.wdMessages, {\n                headers: {\n                  'Content-Type': 'application/json; charset=utf-8',\n                  'Authorization': accessToken\n                },\n                responseType: 'text'\n              });\n            case 6:\n              response = _context4.sent;\n              //返回true和false 展示发布成功和失败\n              if (response.data === true) {\n                ElMessage.success('发布成功');\n              } else {\n                msg = '此功能是主播专属功能，请开通主播卡！<a href=\"/#/server\" style=\"color: #409EFF; text-decoration: underline;\">点此订阅</a>';\n                ElMessage.warning({\n                  message: msg,\n                  dangerouslyUseHTMLString: true,\n                  duration: 6000\n                });\n              }\n              _this4.publishDialogVisible = false;\n              _context4.next = 15;\n              break;\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](0);\n              _this4.messages.push({\n                role: 'system',\n                content: '系统异常，请联系管理员！'\n              });\n              ElMessage.error('发布失败,系统异常');\n            case 15:\n              _context4.prev = 15;\n              // 确保在请求完成或失败后取消加载状态\n              _this4.isLoading = false;\n              _this4.publishDialogVisible = false;\n              return _context4.finish(15);\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[0, 11, 15, 19]]);\n      }))();\n    },\n    typeWriterEffect: function typeWriterEffect(content) {\n      var _this5 = this;\n      var index = 0;\n      // 找到最后一个 role 为 'system' 的消息\n      var lastSystemMessage = this.messages.slice().reverse().find(function (message) {\n        return message.role === 'system';\n      });\n\n      // 如果没有找到 system 消息，直接返回\n      if (!lastSystemMessage) return;\n\n      // 清除之前的定时器\n      if (this.typeWriterTimer) {\n        clearInterval(this.typeWriterTimer);\n      }\n\n      // 每50ms更新一次内容，逐字符显示\n      this.typeWriterTimer = setInterval(function () {\n        if (index < content.length) {\n          lastSystemMessage.content += content[index];\n          index++;\n          _this5.scrollToBottom();\n        } else {\n          clearInterval(_this5.typeWriterTimer); // 完成后停止定时器\n          _this5.scrollToBottom();\n        }\n      }, 20);\n      this.scrollToBottom();\n    },\n    parseMarkdown: function parseMarkdown(content) {\n      return marked.parse(content);\n    },\n    scrollToBottom: function scrollToBottom() {\n      var _this6 = this;\n      setTimeout(function () {\n        var chatBody = _this6.$refs.chatBody;\n        chatBody.scrollTop = chatBody.scrollHeight;\n      }, 100);\n    },\n    showPublishDialog: function showPublishDialog() {\n      this.dialogTitle = '';\n      this.publishDialogVisible = true;\n    },\n    publishChat: function publishChat() {\n      if (!this.dialogTitle.trim()) {\n        ElMessage.warning('请输入标题');\n        return;\n      }\n      var now = new Date();\n      var dateStr = \"\".concat(now.getFullYear(), \"-\").concat(String(now.getMonth() + 1).padStart(2, '0'), \"-\").concat(String(now.getDate()).padStart(2, '0'));\n      this.dialogTitle = this.dialogTitle + ' ' + dateStr;\n      this.SendwdMessages();\n    }\n  },\n  mounted: function mounted() {\n    var _this7 = this;\n    // 在组件加载时检查 URL 参数\n    var userInput = this.$route.query.user_input;\n    var dataId = this.$route.query.data_id;\n    if (dataId) {\n      // 如果存在 data_id 参数，从localStorage获取数据\n      import('@/lin/util/data-transfer').then(function (_ref) {\n        var getData = _ref.getData,\n          removeData = _ref.removeData;\n        var data = getData(dataId);\n        if (data) {\n          // 构建消息内容\n          var content = data;\n\n          // 将构建的内容添加到消息列表\n          _this7.messages.push({\n            role: 'user',\n            content: content\n          });\n          _this7.isLoading = true;\n          _this7.getAiResponse();\n          _this7.scrollToBottom();\n\n          // 使用完数据后从localStorage中删除\n          removeData(dataId);\n        } else {\n          ElMessage.warning('数据已过期或不存在');\n        }\n      }).catch(function (error) {\n        console.error('读取数据失败:', error);\n        ElMessage.error('读取数据失败');\n      });\n    } else if (userInput) {\n      // 如果存在 user_input 参数，将其作为用户输入消息\n      this.messages.push({\n        role: 'user',\n        content: userInput\n      });\n      this.isLoading = true;\n      this.getAiResponse();\n      this.scrollToBottom();\n    }\n  },\n  computed: {\n    loggedIn: function loggedIn() {\n      return this.$store.state.loggedIn;\n    }\n  }\n};","/* unplugin-vue-components disabled */import { render } from \"./aichat-dialog.vue?vue&type=template&id=57897a00&scoped=true\"\nimport script from \"./aichat-dialog.vue?vue&type=script&lang=js\"\nexport * from \"./aichat-dialog.vue?vue&type=script&lang=js\"\n\nimport \"./aichat-dialog.vue?vue&type=style&index=0&id=57897a00&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\projects\\\\lincms\\\\lin-cms-vvlog\\\\node_modules\\\\.pnpm\\\\vue-loader@17.0.1_@vue+comp_e39f86f78aac963d8097e82d11dff38c\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-57897a00\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, openBlock as _openBlock, createElementBlock as _createElementBlock, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../../assets/image/img/v1.1/wxpay.png';\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-672539b3\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"element-loading-background\": \"rgba(0, 0, 0, 0.7)\"\n};\nvar _hoisted_2 = {\n  class: \"dialog-header\"\n};\nvar _hoisted_3 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"el-icon-shopping-cart-2\"\n  }, null, -1);\n});\nvar _hoisted_4 = {\n  class: \"order-info\"\n};\nvar _hoisted_5 = {\n  class: \"qrcode-wrapper\"\n};\nvar _hoisted_6 = {\n  class: \"qrcode-amount\"\n};\nvar _hoisted_7 = {\n  class: \"amount-value\"\n};\nvar _hoisted_8 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"微信支付二维码\",\n    class: \"qrcode-image\"\n  }, null, -1);\n});\nvar _hoisted_9 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"scan-tip\"\n  }, \"请使用微信扫一扫\", -1);\n});\nvar _hoisted_10 = {\n  class: \"compact-countdown\"\n};\nvar _hoisted_11 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"span\", {\n    class: \"countdown-label\"\n  }, \"支付倒计时：\", -1);\n});\nvar _hoisted_12 = {\n  class: \"countdown-time\"\n};\nvar _hoisted_13 = {\n  class: \"info-item\"\n};\nvar _hoisted_14 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"label\"\n  }, \"会员信息\", -1);\n});\nvar _hoisted_15 = {\n  class: \"value highlight\"\n};\nvar _hoisted_16 = {\n  class: \"info-item\"\n};\nvar _hoisted_17 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"label\"\n  }, \"订单号\", -1);\n});\nvar _hoisted_18 = {\n  class: \"value\"\n};\nvar _hoisted_19 = {\n  class: \"info-item\"\n};\nvar _hoisted_20 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"label\"\n  }, \"订单状态\", -1);\n});\nvar _hoisted_21 = {\n  class: \"value\"\n};\nvar _hoisted_22 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"payment-tips\"\n  }, [/*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"el-icon-info-filled\"\n  }), /*#__PURE__*/_createElementVNode(\"span\", null, \"支付小贴士：如遇支付问题，请联系站长哦！\")], -1);\n});\nvar _hoisted_23 = {\n  class: \"success-content\"\n};\nvar _hoisted_24 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"el-icon-circle-check success-icon\"\n  }, null, -1);\n});\nvar _hoisted_25 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h2\", null, \"恭喜您成为邻诗会员！\", -1);\n});\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_progress = _resolveComponent(\"el-progress\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _directive_loading = _resolveDirective(\"loading\");\n  return _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_dialog, {\n    width: \"420px\",\n    class: \"payment-dialog\",\n    modelValue: $data.dialogTableVisible,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.dialogTableVisible = $event;\n    }),\n    \"close-on-click-modal\": false\n  }, {\n    header: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"span\", null, \"微信支付页 - \" + _toDisplayString($data.activeIndex), 1)])];\n    }),\n    default: _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        model: $data.form,\n        \"label-position\": \"top\",\n        ref: \"form\"\n      }, {\n        default: _withCtx(function () {\n          return [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", _hoisted_7, \"¥\" + _toDisplayString($data.form.amount), 1)]), _hoisted_8, _hoisted_9, _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _createElementVNode(\"span\", _hoisted_12, _toDisplayString($options.formatTime($data.remainingTime)), 1), _createVNode(_component_el_progress, {\n            percentage: $options.timePercentage,\n            \"show-text\": false,\n            \"stroke-width\": 4,\n            status: \"warning\",\n            class: \"mini-progress\"\n          }, null, 8, [\"percentage\"])])]), _createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _createElementVNode(\"div\", _hoisted_15, _toDisplayString($data.info), 1)]), _createElementVNode(\"div\", _hoisted_16, [_hoisted_17, _createElementVNode(\"div\", _hoisted_18, _toDisplayString($data.form.payment_no), 1)]), _createElementVNode(\"div\", _hoisted_19, [_hoisted_20, _createElementVNode(\"div\", _hoisted_21, _toDisplayString($data.form.status), 1)]), _hoisted_22])];\n        }),\n        _: 1\n      }, 8, [\"model\"])];\n    }),\n    _: 1\n  }, 8, [\"modelValue\"]), _createVNode(_component_el_dialog, {\n    width: \"420px\",\n    class: \"success-dialog\",\n    modelValue: $data.congratulationsVisible,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $data.congratulationsVisible = $event;\n    }),\n    \"close-on-click-modal\": false\n  }, {\n    default: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_23, [_hoisted_24, _hoisted_25, _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.closeCongratulations,\n        class: \"close-button\"\n      }, {\n        default: _withCtx(function () {\n          return [_createTextVNode(\" 开始体验 \")];\n        }),\n        _: 1\n      }, 8, [\"onClick\"])])];\n    }),\n    _: 1\n  }, 8, [\"modelValue\"])])), [[_directive_loading, $data.loading]]);\n}","import _regeneratorRuntime from \"C:/projects/lincms/lin-cms-vvlog/node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/projects/lincms/lin-cms-vvlog/node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport articleApi from '@/model/article';\nexport default {\n  name: 'OrderPayDialog',\n  data: function data() {\n    return {\n      isPaid: false,\n      isTrans: false,\n      payUrl: '',\n      dialogTableVisible: false,\n      congratulationsVisible: false,\n      // 控制恭喜信息对话框的显示\n      form: {\n        amount: 0,\n        create_time: 'AAA',\n        payment_id: 'AAA',\n        payment_no: 'AAA',\n        status: 'AAA',\n        user_id: 0\n      },\n      activeIndex: '',\n      loading: false,\n      info: '',\n      // 添加倒计时相关数据\n      remainingTime: 300,\n      // 5分钟倒计时，单位秒\n      maxTime: 300,\n      // 最大时间\n      countdownTimer: null // 倒计时定时器\n    };\n  },\n\n  computed: {\n    // 计算倒计时进度百分比\n    timePercentage: function timePercentage() {\n      return this.remainingTime / this.maxTime * 100;\n    }\n  },\n  watch: {\n    dialogTableVisible: function dialogTableVisible(val) {\n      if (!val) {\n        this.loading = false;\n        this.isPaid = false;\n        this.isTrans = false;\n        // 清除倒计时\n        if (this.countdownTimer) {\n          clearInterval(this.countdownTimer);\n          this.countdownTimer = null;\n        }\n      }\n    }\n  },\n  methods: {\n    show: function show(key, title) {\n      this.form = key;\n      this.info = title || 'VIP · 1年';\n      this.dialogTableVisible = true;\n      this.activeIndex = this.form.payment_no;\n      this.loading = false;\n      this.startCheckPay(this.form.payment_id); // 自动启动支付状态检查\n      this.startCountdown(); // 启动倒计时\n    },\n    closeCongratulations: function closeCongratulations() {\n      this.congratulationsVisible = false;\n      this.loading = false; // 重置loading状态\n    },\n    CheckPay: function CheckPay(payment_id) {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return articleApi.postOrderNoPayCheck2(payment_id);\n            case 3:\n              res = _context.sent;\n              if (res === \"支付成功\") {\n                _this.form.status = res;\n                // 关闭定时调用checkPay\n                _this.dialogTableVisible = false;\n                _this.congratulationsVisible = true;\n                clearInterval(_this.checkPayInterval);\n                // 清除倒计时\n                if (_this.countdownTimer) {\n                  clearInterval(_this.countdownTimer);\n                  _this.countdownTimer = null;\n                }\n                _this.$message.success('恭喜您成为邻诗会员！');\n                //查询订单内容\n              }\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    },\n    startCheckPay: function startCheckPay(payment_id) {\n      var _this2 = this;\n      // 设置定时器，每 5 秒调用一次 CheckPay\n      var maxTime = 300 * 1000; // 5 分钟，单位是毫秒\n      var elapsedTime = 0; // 已经过去的时间，单位是毫秒\n\n      // 每隔 5 秒执行一次 CheckPay\n      this.checkPayInterval = setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _this2.CheckPay(payment_id);\n            case 2:\n              // 累加已过去的时间\n              elapsedTime += 5000;\n\n              // 如果超过 5 分钟，停止定时器\n              if (elapsedTime >= maxTime) {\n                clearInterval(_this2.checkPayInterval);\n                console.log('Payment check timeout.');\n                //并且关闭对话框\n                _this2.form.status = '支付失败';\n                // 清除倒计时\n                if (_this2.countdownTimer) {\n                  clearInterval(_this2.countdownTimer);\n                  _this2.countdownTimer = null;\n                }\n              }\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      })), 5000); // 5秒调用一次 CheckPay\n    },\n    // 格式化时间为 mm:ss 格式\n    formatTime: function formatTime(seconds) {\n      var minutes = Math.floor(seconds / 60);\n      var remainingSeconds = seconds % 60;\n      return \"\".concat(minutes.toString().padStart(2, '0'), \":\").concat(remainingSeconds.toString().padStart(2, '0'));\n    },\n    // 启动倒计时\n    startCountdown: function startCountdown() {\n      var _this3 = this;\n      // 重置倒计时\n      this.remainingTime = this.maxTime;\n\n      // 清除可能存在的旧定时器\n      if (this.countdownTimer) {\n        clearInterval(this.countdownTimer);\n      }\n\n      // 创建新的倒计时定时器\n      this.countdownTimer = setInterval(function () {\n        if (_this3.remainingTime > 0) {\n          _this3.remainingTime -= 1;\n        } else {\n          // 倒计时结束，清除定时器\n          clearInterval(_this3.countdownTimer);\n          _this3.countdownTimer = null;\n        }\n      }, 1000);\n    }\n  },\n  // 组件销毁时清除所有定时器\n  beforeUnmount: function beforeUnmount() {\n    if (this.checkPayInterval) {\n      clearInterval(this.checkPayInterval);\n    }\n    if (this.countdownTimer) {\n      clearInterval(this.countdownTimer);\n    }\n  }\n};","/* unplugin-vue-components disabled */import { render } from \"./order-pay-dialog.vue?vue&type=template&id=672539b3&scoped=true\"\nimport script from \"./order-pay-dialog.vue?vue&type=script&lang=js\"\nexport * from \"./order-pay-dialog.vue?vue&type=script&lang=js\"\n\nimport \"./order-pay-dialog.vue?vue&type=style&index=0&id=672539b3&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\projects\\\\lincms\\\\lin-cms-vvlog\\\\node_modules\\\\.pnpm\\\\vue-loader@17.0.1_@vue+comp_e39f86f78aac963d8097e82d11dff38c\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-672539b3\"]])\n\nexport default __exports__","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["userAgent","module","exports","test","uncurryThis","toLength","toString","$repeat","requireObjectCoercible","repeat","stringSlice","slice","ceil","Math","createMethod","IS_END","$this","maxLength","fillString","fillLen","stringFiller","S","intMaxLength","stringLength","length","fillStr","undefined","start","end","toIntegerOrInfinity","$RangeError","RangeError","count","str","this","result","n","Infinity","PROPER_FUNCTION_NAME","fails","whitespaces","non","METHOD_NAME","name","$","$padStart","WEBKIT_BUG","target","proto","forced","padStart","arguments","$trim","forcedStringTrimMethod","trim","_withScopeId","_hoisted_1","class","_hoisted_2","_","_hoisted_3","ref","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","key","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","render","_ctx","_cache","$props","$setup","$data","$options","_component_el_input","_component_el_button","_component_el_dialog","messages","message","index","role","innerHTML","parseMarkdown","content","isLoading","$event","inputMessage","placeholder","onKeyup","sendMessage","apply","onClick","disabled","loggedIn","ai_chat_count","showPublishDialog","title","modelValue","publishDialogVisible","width","footer","default","type","publishChat","dialogTitle","_getDefaults","async","breaks","extensions","gfm","hooks","pedantic","renderer","silent","tokenizer","walkTokens","_defaults","changeDefaults","newDefaults","noopTest","exec","edit","regex","opt","source","obj","replace","val","valSource","other","caret","getRegex","RegExp","codeRemoveIndent","outputLinkReplace","indentCodeCompensation","beginningSpace","endingHash","startingSpaceChar","endingSpaceChar","nonSpaceChar","newLineCharGlobal","tabCharGlobal","multipleSpaceGlobal","blankLine","doubleBlankLine","blockquoteStart","blockquoteSetextReplace","blockquoteSetextReplace2","listReplaceTabs","listReplaceNesting","listIsTask","listReplaceTask","anyLine","hrefBrackets","tableDelimiter","tableAlignChars","tableRowBlankLine","tableAlignRight","tableAlignCenter","tableAlignLeft","startATag","endATag","startPreScriptTag","endPreScriptTag","startAngleBracket","endAngleBracket","pedanticHrefTitle","unicodeAlphaNumeric","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","unescapeTest","percentDecode","findPipe","splitPipe","slashPipe","carriageReturn","spaceLine","notSpaceStart","endingNewline","listItemRegex","bull","nextBulletRegex","indent","min","hrRegex","fencesBeginRegex","headingBeginRegex","htmlBeginRegex","newline","blockCode","fences","hr","heading","bullet","lheading","_paragraph","blockText","_blockLabel","def","list","_tag","_comment","html","paragraph","blockquote","blockNormal","code","table","text","gfmTable","blockGfm","blockPedantic","escape$1","inlineCode","br","inlineText","_punctuation","_punctuationOrSpace","_notPunctuationOrSpace","punctuation","blockSkip","emStrongLDelim","emStrongRDelimAst","emStrongRDelimUnd","anyPunctuation","autolink","_inlineComment","tag","_inlineLabel","reflink","nolink","reflinkSearch","inlineNormal","_backpedal","del","escape","link","url","inlinePedantic","inlineGfm","inlineBreaks","block","normal","inline","escapeReplacements","getEscapeReplacement","ch","encode","cleanUrl","href","encodeURI","splitCells","tableRow","row","match","offset","escaped","curr","cells","split","i","shift","at","pop","splice","push","rtrim","c","invert","l","suffLen","currChar","charAt","findClosingBracket","b","indexOf","level","outputLink","cap","raw","lexer","rules","state","inLink","token","tokens","inlineTokens","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","_Tokenizer","options","constructor","space","src","codeBlockStyle","lang","trimmed","depth","lines","inBlockquote","currentLines","currentRaw","currentText","top","blockTokens","lastToken","oldToken","newText","newToken","substring","isordered","ordered","loose","items","itemRegex","endsWithBlankLine","endEarly","itemContents","line","t","nextLine","trimStart","search","rawLine","nextLineWithoutTabs","ischecked","istask","task","checked","lastItem","trimEnd","spacers","filter","hasMultipleLineBreaks","some","pre","toLowerCase","headers","aligns","rows","item","header","align","cell","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","links","linkString","emStrong","maskedSrc","prevChar","nextChar","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","lastIndex","lastCharLength","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","prevCapZero","_Lexer","inlineQueue","Object","create","static","lex","next","lastParagraphClipped","extTokenizer","call","cutSrc","startBlock","startIndex","tempSrc","tempStart","forEach","getStartIndex","errMsg","charCodeAt","console","error","Error","keys","includes","lastIndexOf","keepPrevChar","startInline","_Renderer","parser","langString","body","parse","parseInline","j","listitem","startAttr","itemBody","checkbox","unshift","tablecell","tablerow","k","strong","em","cleanHref","out","image","_TextRenderer","_Parser","textRenderer","anyToken","renderers","genericToken","ret","textToken","_Hooks","Set","preprocess","markdown","postprocess","processAllTokens","provideLexer","lexInline","provideParser","Marked","defaults","setOptions","Parser","Renderer","TextRenderer","Lexer","Tokenizer","Hooks","args","use","callback","values","concat","tableToken","listToken","childTokens","flat","pack","opts","ext","prevRenderer","extLevel","prop","rendererProp","rendererFunc","tokenizerProp","tokenizerFunc","prevTokenizer","hooksProp","hooksFunc","prevHook","passThroughHooks","has","arg","Promise","resolve","then","packWalktokens","blockType","origOpt","throwError","onError","prototype","all","catch","e","msg","reject","markedInstance","marked","getDefaults","components","OrderPayDialog","data","wdMessages","typeWriterTimer","$store","user","methods","_this","mark","_callee","wrap","_context","prev","abrupt","scrollToBottom","getAiResponse","stop","showPay","_this2","_callee2","_context2","$router","_this3","_callee3","accessToken","lastSystemMessage","response","reader","buffer","_yield$reader$read","done","value","chunk","_iterator","_step","trimmedLine","newContent","_context3","reverse","find","fetch","method","JSON","stringify","sent","getReader","read","TextDecoder","decode","s","startsWith","choices","delta","t0","f","finish","t1","SendwdMessages","_this4","_callee4","_context4","responseType","dangerouslyUseHTMLString","duration","typeWriterEffect","_this5","clearInterval","setInterval","_this6","setTimeout","chatBody","$refs","scrollTop","scrollHeight","now","Date","dateStr","getFullYear","String","getMonth","getDate","mounted","_this7","userInput","$route","query","user_input","dataId","data_id","_ref","getData","removeData","computed","__exports__","alt","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_component_el_progress","_component_el_form","_directive_loading","dialogTableVisible","activeIndex","model","form","amount","formatTime","remainingTime","percentage","timePercentage","status","info","payment_no","congratulationsVisible","closeCongratulations","loading","isPaid","isTrans","payUrl","create_time","payment_id","user_id","maxTime","countdownTimer","watch","show","startCheckPay","startCountdown","CheckPay","res","article","checkPayInterval","$message","success","log","elapsedTime","seconds","minutes","floor","remainingSeconds","beforeUnmount","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","_e","TypeError","err","normalCompletion","didErr","step","_e2"],"sourceRoot":""}